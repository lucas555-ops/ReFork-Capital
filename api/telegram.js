module.exports = async function handler(req, res) {
  // –í–∫–ª—é—á–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è CORS
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ POST
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:', req.body);

    const { name, telegram, package } = req.body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!name || !telegram || !package) {
      return res.status(400).json({ 
        success: false, 
        error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è' 
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const botToken = process.env.BOT_TOKEN;
    const chatId = process.env.CHAT_ID;

    console.log('BOT_TOKEN exists:', !!botToken);
    console.log('CHAT_ID exists:', !!chatId);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!botToken || !chatId) {
      console.error('Missing environment variables');
      return res.status(500).json({ 
        success: false, 
        error: '–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç BOT_TOKEN –∏–ª–∏ CHAT_ID' 
      });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üéØ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ ReFork Capital</b>\n\n` +
                   `üë§ <b>–ò–º—è:</b> ${name}\n` +
                   `üì± <b>Telegram:</b> ${telegram}\n` +
                   `üí∞ <b>–ü–∞–∫–µ—Ç:</b> ${package}\n` +
                   `‚è∞ <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}`;

    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram...');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    });

    const telegramData = await telegramResponse.json();
    console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram API:', telegramData);

    if (telegramResponse.ok) {
      res.status(200).json({ 
  success: true,
  message: '‚úÖ –°–∏–≥–Ω–∞–ª –ø–æ–ª—É—á–µ–Ω! –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.'
});
    } else {
      console.error('–û—à–∏–±–∫–∞ Telegram API:', telegramData);
      res.status(500).json({ 
        success: false, 
        error: `–û—à–∏–±–∫–∞ Telegram: ${telegramData.description || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
      });
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    res.status(500).json({ 
      success: false, 
      error: `–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.message}` 
    });
  }
};



